// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoApp.DAL.AppDBContext;

#nullable disable

namespace ToDoApp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoApp.Domain.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserDetailID")
                        .HasColumnType("int");

                    b.HasKey("AddressID");

                    b.HasIndex("UserDetailID");

                    b.ToTable("Addresses", (string)null);

                    b.HasData(
                        new
                        {
                            AddressID = 1,
                            City = "DefaultCity",
                            Country = "DefaultCountry",
                            PostalCode = "123-456",
                            Region = "DefaultRegion",
                            UserDetailID = 1
                        });
                });

            modelBuilder.Entity("ToDoApp.Domain.Gender", b =>
                {
                    b.Property<int>("GenderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderID"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderID");

                    b.ToTable("Gender", (string)null);

                    b.HasData(
                        new
                        {
                            GenderID = 1,
                            GenderName = "Kadın"
                        },
                        new
                        {
                            GenderID = 2,
                            GenderName = "Erkek"
                        });
                });

            modelBuilder.Entity("ToDoApp.Domain.ToDoItem", b =>
                {
                    b.Property<int>("ToDoItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToDoItemID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ToDoItemID");

                    b.HasIndex("UserID");

                    b.ToTable("ToDoItem", (string)null);
                });

            modelBuilder.Entity("ToDoApp.Domain.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GenderID")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserID");

                    b.HasIndex("GenderID");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "Default@example.com",
                            GenderID = 1,
                            Password = "Default",
                            Phone = "555-444-333",
                            UserName = "Default"
                        });
                });

            modelBuilder.Entity("ToDoApp.Domain.UserDetail", b =>
                {
                    b.Property<int>("UserDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserDetailID"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserDetailID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("UserDetail", (string)null);

                    b.HasData(
                        new
                        {
                            UserDetailID = 1,
                            BirthDate = new DateTime(2024, 9, 8, 21, 5, 17, 590, DateTimeKind.Local).AddTicks(2942),
                            FirstName = "DefaultName",
                            LastName = "DefaultLastName",
                            UserID = 1
                        });
                });

            modelBuilder.Entity("ToDoApp.Domain.Address", b =>
                {
                    b.HasOne("ToDoApp.Domain.UserDetail", "UserDetail")
                        .WithMany("Addresses")
                        .HasForeignKey("UserDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("ToDoApp.Domain.ToDoItem", b =>
                {
                    b.HasOne("ToDoApp.Domain.User", "User")
                        .WithMany("ToDoItems")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoApp.Domain.User", b =>
                {
                    b.HasOne("ToDoApp.Domain.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("ToDoApp.Domain.UserDetail", b =>
                {
                    b.HasOne("ToDoApp.Domain.User", "User")
                        .WithOne("UserDetail")
                        .HasForeignKey("ToDoApp.Domain.UserDetail", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoApp.Domain.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ToDoApp.Domain.User", b =>
                {
                    b.Navigation("ToDoItems");

                    b.Navigation("UserDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("ToDoApp.Domain.UserDetail", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
